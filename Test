import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Info } from 'lucide-react';

const NatursteinmauerRechner = () => {
  // Grundlegende Mauerabmessungen
  const [mauerlaenge, setMauerlaenge] = useState(5);
  const [mauerhoehe, setMauerhoehe] = useState(1);
  const [mauerbreite, setMauerbreite] = useState(0.4);
  
  // Mauertyp und Materialien
  const [mauertyp, setMauertyp] = useState("trocken");
  const [steintyp, setSteintyp] = useState("kalkstein");
  const [steinform, setSteinform] = useState("unregelmassig");
  const [steingroesse, setSteingroesse] = useState("mittel");
  
  // Manuelle Steindimensionen
  const [manuelleSteingroesse, setManuelleSteingroesse] = useState(false);
  const [steinBreite, setSteinBreite] = useState(0.3);
  const [steinHoehe, setSteinHoehe] = useState(0.15);
  const [steinTiefe, setSteinTiefe] = useState(0.2);
  
  // Zusätzliche Parameter
  const [hohlraumFaktor, setHohlraumFaktor] = useState(0.3); // 30% Hohlräume bei Trockenmauer
  const [verschnittFaktor, setVerschnittFaktor] = useState(0.15); // 15% Verschnitt
  const [fundamentHoehe, setFundamentHoehe] = useState(0.3);
  const [fundamentBreite, setFundamentBreite] = useState(0.6);
  const [drainageBreite, setDrainageBreite] = useState(0.2);
  const [drainageHoehe, setDrainageHoehe] = useState(0.7);
  
  // Berechnete Ergebnisse
  const [ergebnisse, setErgebnisse] = useState({
    steinMenge: 0,
    steinGewicht: 0,
    moertelMenge: 0,
    fundamentMenge: 0,
    drainageMenge: 0,
    hinterfuellungMenge: 0,
    zeitaufwand: 0,
    kostenMaterial: 0,
  });
  
  // Material-Dichten und Preise
  const steinDichten = {
    kalkstein: 2600, // kg/m³
    sandstein: 2300,
    granit: 2700,
    basalt: 3000,
    schiefer: 2700
  };
  
  const materialPreise = {
    kalkstein: 180, // €/Tonne
    sandstein: 200,
    granit: 250,
    basalt: 220,
    schiefer: 230,
    moertel: 120, // €/m³
    kies: 60, // €/m³
    schotter: 80, // €/m³
    beton: 140 // €/m³
  };
  
  // Zeitaufwand pro m³ Mauer in Stunden (basierend auf Mauertyp, Steinform und -größe)
  const zeitaufwandFaktoren = {
    trocken: {
      unregelmassig: {
        klein: 8.0,
        mittel: 6.5,
        gross: 5.0,
        gemischt: 6.8
      },
      behauen: {
        klein: 6.5,
        mittel: 5.0,
        gross: 4.0,
        gemischt: 5.2
      },
      gesaegt: {
        klein: 5.0,
        mittel: 3.5,
        gross: 2.8,
        gemischt: 3.8
      }
    },
    moertel: {
      unregelmassig: {
        klein: 10.0,
        mittel: 8.0,
        gross: 6.5,
        gemischt: 8.2
      },
      behauen: {
        klein: 8.5,
        mittel: 6.5,
        gross: 5.5,
        gemischt: 6.8
      },
      gesaegt: {
        klein: 6.0,
        mittel: 4.5,
        gross: 3.5,
        gemischt: 4.7
      }
    }
  };
  
  // Update der Hohlraum- und Verschnittfaktoren basierend auf Mauertyp, Steinform und Steingröße
  useEffect(() => {
    if (manuelleSteingroesse) {
      // Bei manuellen Steindimensionen angepasste Berechnung
      // Je kleiner die Steine, desto mehr Hohlraum/Fugen gibt es typischerweise
      const steinVolumen = steinBreite * steinHoehe * steinTiefe;
      // Kleine Steine haben mehr Hohlraum
      if (steinVolumen < 0.01) { // Sehr kleine Steine
        setHohlraumFaktor(mauertyp === "trocken" ? 0.35 : 0.2);
        setVerschnittFaktor(mauertyp === "trocken" ? 0.18 : 0.2);
      } else if (steinVolumen < 0.03) { // Mittlere Steine
        setHohlraumFaktor(mauertyp === "trocken" ? 0.28 : 0.15);
        setVerschnittFaktor(mauertyp === "trocken" ? 0.15 : 0.18);
      } else { // Große Steine
        setHohlraumFaktor(mauertyp === "trocken" ? 0.22 : 0.12);
        setVerschnittFaktor(mauertyp === "trocken" ? 0.12 : 0.15);
      }
    } else {
      // Vordefinierte Faktoren basierend auf Steinform, Steingröße und Mauertyp
      let hohlraum, verschnitt;
      
      if (mauertyp === "trocken") {
        if (steinform === "unregelmassig") {
          if (steingroesse === "klein") {
            hohlraum = 0.35; verschnitt = 0.18;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.3; verschnitt = 0.15;
          } else if (steingroesse === "gross") {
            hohlraum = 0.25; verschnitt = 0.12;
          } else { // gemischt
            hohlraum = 0.28; verschnitt = 0.15;
          }
        } else if (steinform === "behauen") {
          if (steingroesse === "klein") {
            hohlraum = 0.3; verschnitt = 0.15;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.25; verschnitt = 0.12;
          } else if (steingroesse === "gross") {
            hohlraum = 0.2; verschnitt = 0.1;
          } else { // gemischt
            hohlraum = 0.23; verschnitt = 0.12;
          }
        } else { // gesägt
          if (steingroesse === "klein") {
            hohlraum = 0.25; verschnitt = 0.12;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.2; verschnitt = 0.1;
          } else if (steingroesse === "gross") {
            hohlraum = 0.15; verschnitt = 0.08;
          } else { // gemischt
            hohlraum = 0.18; verschnitt = 0.1;
          }
        }
      } else { // Mörtelmauer
        if (steinform === "unregelmassig") {
          if (steingroesse === "klein") {
            hohlraum = 0.2; verschnitt = 0.2;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.15; verschnitt = 0.18;
          } else if (steingroesse === "gross") {
            hohlraum = 0.12; verschnitt = 0.15;
          } else { // gemischt
            hohlraum = 0.15; verschnitt = 0.18;
          }
        } else if (steinform === "behauen") {
          if (steingroesse === "klein") {
            hohlraum = 0.15; verschnitt = 0.18;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.12; verschnitt = 0.15;
          } else if (steingroesse === "gross") {
            hohlraum = 0.1; verschnitt = 0.12;
          } else { // gemischt
            hohlraum = 0.12; verschnitt = 0.15;
          }
        } else { // gesägt
          if (steingroesse === "klein") {
            hohlraum = 0.12; verschnitt = 0.12;
          } else if (steingroesse === "mittel") {
            hohlraum = 0.1; verschnitt = 0.1;
          } else if (steingroesse === "gross") {
            hohlraum = 0.08; verschnitt = 0.08;
          } else { // gemischt
            hohlraum = 0.1; verschnitt = 0.1;
          }
        }
      }
      
      setHohlraumFaktor(hohlraum);
      setVerschnittFaktor(verschnitt);
    }
  }, [mauertyp, steinform, steingroesse, manuelleSteingroesse, steinBreite, steinHoehe, steinTiefe]);

  // Berechnung durchführen
  useEffect(() => {
    // Volumen der Mauer ohne Hohlräume
    const mauerVolumen = mauerlaenge * mauerhoehe * mauerbreite;
    
    // Volumen der tatsächlich benötigten Steine (inkl. Hohlräume aber ohne Verschnitt)
    const steinVolumenNetto = mauerVolumen * (1 - hohlraumFaktor);
    
    // Volumen der tatsächlich zu bestellenden Steine (inkl. Verschnitt)
    const steinVolumenBrutto = steinVolumenNetto * (1 + verschnittFaktor);
    
    // Gewicht der Steine
    const steinGewicht = steinVolumenBrutto * steinDichten[steintyp] / 1000; // in Tonnen
    
    // Mörtelmenge (nur für Mörtelmauer)
    const moertelMenge = mauertyp === "moertel" ? mauerVolumen * hohlraumFaktor : 0;
    
    // Fundament
    const fundamentVolumen = mauerlaenge * fundamentBreite * fundamentHoehe;
    
    // Drainage
    const drainageVolumen = mauerlaenge * drainageBreite * drainageHoehe;
    
    // Hinterfüllung (vereinfacht, könnte noch verbessert werden)
    const hinterfuellungVolumen = mauerlaenge * mauerhoehe * 0.3; // angenommen 30cm Hinterfüllung
    
    // Zeitaufwand in Stunden
    let zeitaufwandStunden;
    
    if (manuelleSteingroesse) {
      // Bei manuellen Steindimensionen basierend auf Volumen einen Zeitaufwand schätzen
      const steinVolumen = steinBreite * steinHoehe * steinTiefe;
      let basisZeitfaktor;
      
      if (steinform === "unregelmassig") {
        basisZeitfaktor = mauertyp === "trocken" ? 6.5 : 8.0;
      } else if (steinform === "behauen") {
        basisZeitfaktor = mauertyp === "trocken" ? 5.0 : 6.5;
      } else { // gesägt
        basisZeitfaktor = mauertyp === "trocken" ? 3.5 : 4.5;
      }
      
      // Anpassung basierend auf Steingröße
      if (steinVolumen < 0.01) { // Sehr kleine Steine
        basisZeitfaktor *= 1.3;
      } else if (steinVolumen > 0.03) { // Große Steine
        basisZeitfaktor *= 0.8;
      }
      
      zeitaufwandStunden = mauerVolumen * basisZeitfaktor;
    } else {
      // Standard-Zeitaufwand basierend auf vordefinierten Faktoren
      zeitaufwandStunden = mauerVolumen * zeitaufwandFaktoren[mauertyp][steinform][steingroesse];
    }
    
    // Materialkosten
    const steinKosten = steinGewicht * materialPreise[steintyp];
    const moertelKosten = moertelMenge * materialPreise.moertel;
    const fundamentKosten = fundamentVolumen * materialPreise.beton;
    const drainageKosten = drainageVolumen * materialPreise.schotter;
    const hinterfuellungKosten = hinterfuellungVolumen * materialPreise.kies;
    const gesamtMaterialKosten = steinKosten + moertelKosten + fundamentKosten + drainageKosten + hinterfuellungKosten;
    
    setErgebnisse({
      steinMenge: steinVolumenBrutto.toFixed(2),
      steinGewicht: steinGewicht.toFixed(2),
      moertelMenge: moertelMenge.toFixed(2),
      fundamentMenge: fundamentVolumen.toFixed(2),
      drainageMenge: drainageVolumen.toFixed(2),
      hinterfuellungMenge: hinterfuellungVolumen.toFixed(2),
      zeitaufwand: zeitaufwandStunden.toFixed(1),
      kostenMaterial: gesamtMaterialKosten.toFixed(2)
    });
  }, [mauerlaenge, mauerhoehe, mauerbreite, mauertyp, steintyp, steinform, hohlraumFaktor, verschnittFaktor, fundamentHoehe, fundamentBreite, drainageBreite, drainageHoehe]);

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h1 className="text-2xl font-bold mb-6 text-center">Natursteinmauer-Materialrechner für Galabauer</h1>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        {/* Eingabebereich - linke Spalte */}
        <Card>
          <CardHeader>
            <CardTitle>Mauerparameter</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <label className="block mb-1 font-medium">Mauertyp</label>
                <select 
                  value={mauertyp} 
                  onChange={(e) => setMauertyp(e.target.value)}
                  className="w-full p-2 border rounded"
                >
                  <option value="trocken">Trockenmauer</option>
                  <option value="moertel">Mörtelmauer</option>
                </select>
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Steintyp</label>
                <select 
                  value={steintyp} 
                  onChange={(e) => setSteintyp(e.target.value)}
                  className="w-full p-2 border rounded"
                >
                  <option value="kalkstein">Kalkstein</option>
                  <option value="sandstein">Sandstein</option>
                  <option value="granit">Granit</option>
                  <option value="basalt">Basalt</option>
                  <option value="schiefer">Schiefer</option>
                </select>
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Steinform</label>
                <select 
                  value={steinform} 
                  onChange={(e) => setSteinform(e.target.value)}
                  className="w-full p-2 border rounded"
                >
                  <option value="unregelmassig">Unregelmäßig (Bruchstein)</option>
                  <option value="behauen">Behauen</option>
                  <option value="gesaegt">Gesägt</option>
                </select>
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Steingröße</label>
                <select 
                  value={steingroesse} 
                  onChange={(e) => setSteingroesse(e.target.value)}
                  className="w-full p-2 border rounded"
                  disabled={manuelleSteingroesse}
                >
                  <option value="klein">Klein (10-20 cm)</option>
                  <option value="mittel">Mittel (20-40 cm)</option>
                  <option value="gross">Groß (40-60 cm)</option>
                  <option value="gemischt">Gemischte Größen</option>
                </select>
              </div>
              
              <div className="flex items-center mt-2">
                <input 
                  type="checkbox" 
                  id="manuelleGroesse" 
                  checked={manuelleSteingroesse} 
                  onChange={() => setManuelleSteingroesse(!manuelleSteingroesse)}
                  className="mr-2"
                />
                <label htmlFor="manuelleGroesse" className="text-sm font-medium">
                  Steingröße manuell festlegen
                </label>
              </div>
              
              {manuelleSteingroesse && (
                <div className="mt-2 p-3 border rounded bg-gray-50">
                  <div className="mb-2">
                    <label className="block mb-1 text-sm">Steinbreite (m)</label>
                    <input 
                      type="number" 
                      min="0.05" 
                      step="0.05" 
                      value={steinBreite} 
                      onChange={(e) => setSteinBreite(Number(e.target.value))}
                      className="w-full p-2 border rounded"
                    />
                  </div>
                  <div className="mb-2">
                    <label className="block mb-1 text-sm">Steinhöhe (m)</label>
                    <input 
                      type="number" 
                      min="0.05" 
                      step="0.05" 
                      value={steinHoehe} 
                      onChange={(e) => setSteinHoehe(Number(e.target.value))}
                      className="w-full p-2 border rounded"
                    />
                  </div>
                  <div>
                    <label className="block mb-1 text-sm">Steintiefe (m)</label>
                    <input 
                      type="number" 
                      min="0.05" 
                      step="0.05" 
                      value={steinTiefe} 
                      onChange={(e) => setSteinTiefe(Number(e.target.value))}
                      className="w-full p-2 border rounded"
                    />
                  </div>
                </div>
              )}
              
              <div>
                <label className="block mb-1 font-medium">Mauerlänge (m)</label>
                <input 
                  type="number" 
                  min="0.1" 
                  step="0.1" 
                  value={mauerlaenge} 
                  onChange={(e) => setMauerlaenge(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Mauerhöhe (m)</label>
                <input 
                  type="number" 
                  min="0.1" 
                  step="0.1" 
                  value={mauerhoehe} 
                  onChange={(e) => setMauerhoehe(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Mauerbreite/Stärke (m)</label>
                <input 
                  type="number" 
                  min="0.1" 
                  step="0.1" 
                  value={mauerbreite} 
                  onChange={(e) => setMauerbreite(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
            </div>
          </CardContent>
        </Card>
        
        {/* Erweiterte Parameter - rechte Spalte */}
        <Card>
          <CardHeader>
            <CardTitle>Erweiterte Parameter</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <label className="block mb-1 font-medium">Fundamenthöhe (m)</label>
                <input 
                  type="number" 
                  min="0" 
                  step="0.05" 
                  value={fundamentHoehe} 
                  onChange={(e) => setFundamentHoehe(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Fundamentbreite (m)</label>
                <input 
                  type="number" 
                  min="0" 
                  step="0.1" 
                  value={fundamentBreite} 
                  onChange={(e) => setFundamentBreite(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Drainagebreite (m)</label>
                <input 
                  type="number" 
                  min="0" 
                  step="0.05" 
                  value={drainageBreite} 
                  onChange={(e) => setDrainageBreite(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Drainagehöhe (m)</label>
                <input 
                  type="number" 
                  min="0" 
                  step="0.1" 
                  value={drainageHoehe} 
                  onChange={(e) => setDrainageHoehe(Number(e.target.value))}
                  className="w-full p-2 border rounded"
                />
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Hohlraumfaktor</label>
                <div className="flex items-center">
                  <input 
                    type="range" 
                    min="0.05" 
                    max="0.5" 
                    step="0.01" 
                    value={hohlraumFaktor} 
                    onChange={(e) => setHohlraumFaktor(Number(e.target.value))}
                    className="w-full mr-2"
                  />
                  <span>{(hohlraumFaktor * 100).toFixed(0)}%</span>
                </div>
              </div>
              
              <div>
                <label className="block mb-1 font-medium">Verschnittfaktor</label>
                <div className="flex items-center">
                  <input 
                    type="range" 
                    min="0.05" 
                    max="0.3" 
                    step="0.01" 
                    value={verschnittFaktor} 
                    onChange={(e) => setVerschnittFaktor(Number(e.target.value))}
                    className="w-full mr-2"
                  />
                  <span>{(verschnittFaktor * 100).toFixed(0)}%</span>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
      
      {/* Ergebnisbereich */}
      <Card className="bg-blue-50">
        <CardHeader>
          <CardTitle>Berechnete Ergebnisse</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Steinmenge:</span>
                <span>{ergebnisse.steinMenge} m³</span>
              </div>
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Steingewicht:</span>
                <span>{ergebnisse.steinGewicht} Tonnen</span>
              </div>
              {mauertyp === "moertel" && (
                <div className="flex justify-between p-2 bg-white rounded shadow">
                  <span className="font-medium">Mörtelmenge:</span>
                  <span>{ergebnisse.moertelMenge} m³</span>
                </div>
              )}
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Fundamentbeton:</span>
                <span>{ergebnisse.fundamentMenge} m³</span>
              </div>
            </div>
            
            <div className="space-y-2">
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Drainageschotter:</span>
                <span>{ergebnisse.drainageMenge} m³</span>
              </div>
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Hinterfüllung (Kies):</span>
                <span>{ergebnisse.hinterfuellungMenge} m³</span>
              </div>
              <div className="flex justify-between p-2 bg-white rounded shadow">
                <span className="font-medium">Geschätzter Zeitaufwand:</span>
                <span>{ergebnisse.zeitaufwand} Std</span>
              </div>
              <div className="flex justify-between p-2 bg-white rounded shadow font-bold">
                <span>Materialkosten (ca.):</span>
                <span>{ergebnisse.kostenMaterial} €</span>
              </div>
            </div>
          </div>
          
          <div className="mt-4 flex items-start p-3 bg-yellow-50 border border-yellow-200 rounded">
            <Info className="text-yellow-500 mr-2 flex-shrink-0 mt-1" size={20} />
            <p className="text-sm">
              Dieser Rechner dient als Orientierungshilfe. Die tatsächlichen Mengen können je nach lokalen Gegebenheiten, 
              Steinqualität und Bauweise variieren. Es wird empfohlen, einen Sicherheitsaufschlag von 5-10% für kritische 
              Materialien einzuplanen.
            </p>
          </div>
        </CardContent>
      </Card>
      
      {/* Visualisierung */}
      <Card className="mt-6">
        <CardHeader>
          <CardTitle>Visualisierung</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="bg-gray-100 p-4 rounded border relative" style={{ height: '300px' }}>
            {/* Visualisierung der Mauer */}
            <div className="absolute bottom-0 left-0 right-0" style={{ 
              height: `${mauerhoehe * 70}px`, 
              background: steintyp === 'kalkstein' ? '#e0dcd0' : 
                         steintyp === 'sandstein' ? '#e6c08f' : 
                         steintyp === 'granit' ? '#a1a1a1' : 
                         steintyp === 'basalt' ? '#5e5e5e' : 
                         steintyp === 'schiefer' ? '#4e5c66' : '#e0dcd0',
              backgroundImage: steinform === 'unregelmassig' ? 'linear-gradient(135deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 50%, rgba(0,0,0,0.1) 50%, rgba(0,0,0,0.1) 75%, transparent 75%, transparent)' : 
                              steinform === 'behauen' ? 'repeating-linear-gradient(0deg, rgba(0,0,0,0.1), rgba(0,0,0,0.1) 15px, transparent 15px, transparent 30px)' :
                              'repeating-linear-gradient(0deg, rgba(0,0,0,0.05), rgba(0,0,0,0.05) 20px, transparent 20px, transparent 40px)',
              backgroundSize: manuelleSteingroesse ? 
                            `${steinBreite * 100}px ${steinHoehe * 100}px` : 
                            steingroesse === 'klein' ? '20px 20px' :
                            steingroesse === 'mittel' ? '30px 30px' :
                            steingroesse === 'gross' ? '50px 50px' : '30px 30px',
            }}>
              {/* Darstellung der Mörtelfugen wenn Mörtelmauer */}
              {mauertyp === "moertel" && (
                <div className="absolute inset-0" style={{
                  backgroundImage: 'linear-gradient(0deg, rgba(200,200,200,0.5) 1px, transparent 1px), linear-gradient(90deg, rgba(200,200,200,0.5) 1px, transparent 1px)',
                  backgroundSize: '15px 15px'
                }}></div>
              )}
            </div>
            
            {/* Fundament */}
            <div className="absolute bottom-0 left-0 right-0 bg-gray-400" style={{ 
              height: `${fundamentHoehe * 70}px`, 
              transform: `translateY(${mauerhoehe * 70}px)` 
            }}></div>
            
            {/* Drainage */}
            <div className="absolute bottom-0 right-0 bg-amber-300" style={{ 
              height: `${drainageHoehe * 70}px`, 
              width: `${drainageBreite * 70}px`,
              transform: `translateY(${mauerhoehe * 70}px)` 
            }}></div>
            
            {/* Maßstabsleiste */}
            <div className="absolute top-2 left-2 flex items-center">
              <div className="h-4 w-20 bg-black"></div>
              <span className="ml-2 text-xs">1m</span>
            </div>
            
            {/* Beschriftungen - Mauer */}
            <div className="absolute top-2 right-2 bg-white p-2 rounded border text-xs">
              <div>L: {mauerlaenge}m</div>
              <div>H: {mauerhoehe}m</div>
              <div>B: {mauerbreite}m</div>
            </div>
            
            {/* Beschriftungen - Stein */}
            {manuelleSteingroesse && (
              <div className="absolute bottom-2 left-2 bg-white p-2 rounded border text-xs">
                <div className="font-medium mb-1">Steinmaße:</div>
                <div>Breite: {steinBreite}m</div>
                <div>Höhe: {steinHoehe}m</div>
                <div>Tiefe: {steinTiefe}m</div>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default NatursteinmauerRechner;
